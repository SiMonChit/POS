using System;
using System.Data.SqlClient;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data;
using POS.Entities;

namespace POS.DataAccess
{
    public class AutoGenerateDataController:DataControllerBase
    {
        public void Insert(dsPOS.AutoGenerateRow generateRow)
        {
            command = new SqlCommand("AutoGenerate_Insert", connection);

            command.CommandType = CommandType.StoredProcedure;

            try
            {
                command.Parameters.AddWithValue("LastValue", generateRow.LastValue);
                command.Parameters.AddWithValue("GenerateType", generateRow.GenerateType);
                command.Parameters.AddWithValue("Synbol", generateRow.Synbol);

                connection.Open();
                command.ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                connection.Close();
            }
        }

        public void Update(dsPOS.AutoGenerateRow generateRow)
        {
            command = new SqlCommand("AutoGenerate_Update", connection);

            command.CommandType = CommandType.StoredProcedure;

            try
            {
                command.Parameters.AddWithValue("GenerateID", generateRow.GenerateID);
                command.Parameters.AddWithValue("LastValue", generateRow.LastValue);
                command.Parameters.AddWithValue("GenerateType", generateRow.GenerateType);
                command.Parameters.AddWithValue("Synbol", generateRow.Synbol);

                connection.Open();
                command.ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                connection.Close();
            }
        }

        public dsPOS.AutoGenerateDataTable Select()
        {
            dsPOS.AutoGenerateDataTable datatable = new dsPOS.AutoGenerateDataTable();

            command = new SqlCommand("AutoGenerate_Select", connection);

            command.CommandType = CommandType.StoredProcedure;

            try
            {
                SqlDataAdapter dataAdapter = new SqlDataAdapter();
                dataAdapter.SelectCommand = command;
                dataAdapter.Fill(datatable);
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                connection.Close();
            }
            return datatable;
        }

        public string GetVoucherNo(string GenerateType)
        {
            connection.Open();
            command = new SqlCommand("FakeAutoCodeGenerator", connection);
            command.CommandType = CommandType.StoredProcedure;

            command.Parameters.AddWithValue("@GenerateType", GenerateType);

            string key = null;
            try
            {
                key = (string)command.ExecuteScalar();
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                if (connection.State == ConnectionState.Open)
                    connection.Close();
            }
            return key;
        }

        public void AutoCodeGenerate(string GenerateType)
        {
            command = new SqlCommand("AutoCodeGenerator", connection);
            command.CommandType = CommandType.StoredProcedure;

            try
            {
                command.Parameters.AddWithValue("@GenerateType", GenerateType);
                connection.Open();
                command.ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                throw ex;
            }
            finally
            {
                if (connection.State == ConnectionState.Open)
                    connection.Close();
            }
        }
    }
}
